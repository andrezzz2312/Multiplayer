[manifest]
version = "1.0.0"
dump_lua = true
priority = 2147483600

[[patches]]
[patches.regex]
target = "functions/state_events.lua"
pattern = '''function end_round\(\)(?<pre>[\s\S]+?)func = function\(\)'''
position = 'at'
payload = "function end_round()$pre func = MP.LOBBY.code and MP.end_round or function()"
times = 1

[[patches]]
[patches.regex]
target = "game.lua"
pattern = '''function Game:update_round_eval\(dt\)(?<pre>[\s\S]+?)if not G.STATE_COMPLETE then'''
position = 'at'
payload = '''function Game:update_round_eval(dt)$pre if not G.STATE_COMPLETE and not MP.GAME.prevent_eval then
        MP.GAME.prevent_eval = true'''
times = 1

[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = '''dollars = dollars + G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/5), G.GAME.interest_cap/5)
    end'''
position = 'after'
payload = '''
  if not MP.GAME.comeback_bonus_given then
		MP.GAME.comeback_bonus_given = true
		add_round_eval_row({
			bonus = true,
			name = "comeback",
			pitch = pitch,
			dollars = 4 * MP.GAME.comeback_bonus,
		})
		dollars = dollars + 4 * MP.GAME.comeback_bonus
	end'''
match_indent = false
times = 1

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''elseif config.name == 'hands' then'''
position = 'before'
payload = '''elseif config.name == "comeback" then
  table.insert(left_text, {
    n = G.UIT.T,
    config = {
      text = MP.GAME.comeback_bonus,
      scale = 0.8 * scale,
      colour = G.C.PURPLE,
      shadow = true,
      juice = true,
    },
  })
  table.insert(left_text, {
    n = G.UIT.O,
    config = {
      object = DynaText({
        string = {
          localize("k_total_lives_lost"),
        },
        colours = { G.C.UI.TEXT_LIGHT },
        shadow = true,
        pop_in = 0,
        scale = 0.4 * scale,
        silent = true,
      }),
    },
  })'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''if G.GAME.current_round.hands_left > 0 and not G.GAME.modifiers.no_extra_hand_money then'''
position = 'at'
payload = '''if G.GAME.current_round.hands_left > 0 and (not G.GAME.modifiers.no_extra_hand_money) and (not MP.is_pvp_boss()) then'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''G.GAME.current_round.hands_left = G.GAME.current_round.hands_left + mod'''
position = 'after'
payload = '''if MP.LOBBY.code and MP.is_pvp_boss() and mod > 0 then
		MP.ACTIONS.play_hand(G.GAME.chips, G.GAME.current_round.hands_left)
	end'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:sell_card()'''
position = 'after'
payload = '''if MP.LOBBY.code then
  MP.ACTIONS.sold_joker()
end'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = '''G.FUNCS.toggle_shop = function(e)'''
position = 'after'
payload = '''if MP.LOBBY.code then
  MP.ACTIONS.spent_last_shop(to_big(MP.GAME.spent_total) - to_big(MP.GAME.spent_before_shop))
end'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''G.GAME.dollars = G.GAME.dollars + mod'''
position = 'after'
payload = '''if MP.LOBBY.code and to_big(mod) < to_big(0) then
  MP.GAME.spent_total = to_big(MP.GAME.spent_total) + (to_big(mod) * to_big(-1))
end'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = '''local dollars = 0

if G.GAME.chips - G.GAME.blind.chips >= 0 then'''
position = 'at'
payload = '''local dollars = 0

if G.GAME.chips - G.GAME.blind.chips >= 0 or MP.is_pvp_boss() then'''
match_indent = true
times = 1

# apply bans here
# hmm...
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''G:save_settings()'''
position = "before"
payload = '''
if not saveTable then -- i am 99% sure this is unnecessary but i'm checking it anyway
	MP.ApplyBans()
end
'''
match_indent = true
times = 1

# effectively ban enhancements from grim/familiar/incantation
# this MIGHT break stuff but my bet is that it doesn't
# because that would be convenient
[[patches]]
[patches.pattern]
target = '''=[SMODS _ "src/game_object.lua"]'''
pattern = '''for k, v in pairs(G.P_CENTER_POOLS["Enhanced"]) do'''
position = "at"
payload = '''
for i, v in ipairs(MP.UTILS.get_culled_pool("Enhanced")) do
	local v = G.P_CENTERS[v]
'''
match_indent = true
times = 3